{"version":3,"file":"regrafx.rgfx.js","sources":["../../src/subscription.js","../../src/subscribers.js","../../src/observable.js","../../src/observer.js","../../src/scheduler.js","../../src/token.js","../../src/message.js","../../src/tools.js","../../src/task.js","../../src/vertex.js","../../src/graph.js","../../src/regrafx.js","../../src/regrafx.es6.js"],"sourcesContent":["export class Subscription {\n  constructor(obj) {\n    this.id = Symbol();\n    this.unsubscribe = obj.unsubscribe.bind(obj, this.id);\n  }\n}","import { Subscription } from './subscription.js';\n\nexport class Subscribers {\n  constructor() {\n    this._subscribers = {};\n  }\n  subscribe(obj) {\n    const subscription = new Subscription(this);\n    this._subscribers[subscription.id] = obj;\n    return subscription;\n  }\n  unsubscribe(id) {\n    delete this._subscribers[id];\n  }\n  size() {\n    return this.ids().length;\n  }\n  ids() {\n    return Object.getOwnPropertySymbols(this._subscribers);\n  }\n  get(id) {\n    return this._subscribers[id];\n  }\n  set(obj) {\n    this._subscribers[id] = obj;\n  }\n  iterable() {\n    return Object.getOwnPropertySymbols(this._subscribers).map(s => this._subscribers[s]);\n  }\n}","import {Subscribers} from './subscribers.js';\n\nexport class Observable {\n  constructor(subscribers = new Subscribers() ) {\n    this.$$observers = subscribers;\n  }\n  subscribe(observer) {\n    return this.observers().subscribe(observer);\n  }\n  observers() {\n    return this.$$observers;\n  }\n  unsubscribe(id) {\n    this.observers().unsubscribe(id);\n  }\n  notify(...obj) {\n    for (const observer of this.observers().iterable()) {\n      observer.next(...obj);\n    }\n  }\n}\n","\nexport class Observer {\n  constructor(fn = () => undefined, name = 'Linked Observer') {\n    this._fn = fn;\n    this._name = name;\n  }\n  next(...input) {\n    return this._fn(...input);\n  }\n}\n","import { Observable } from './observable.js';\n\nexport class Scheduler {\n  constructor(delay = 0, pauser = new Observable()) {\n    this._delay = delay;\n    this._pause = 0;\n    this._pauser = pauser;\n  }\n  schedule() {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        this.isRunning()\n          ? resolve()\n          : this._pauser.subscribe(x => {\n            this._pause = x;\n            if (this.isRunning()) {resolve();}\n          });\n      }, this._delay);\n    });\n  }\n  isRunning() {\n    return !this._pause;\n  }\n}\n","export class Token {\n  constructor() {\n    this.$$symbol = Symbol();\n    this.$$date = Date.now();\n    this.$$cancelled = false;\n  }\n  cancel() {\n    this.$$cancelled = true;\n  }\n}","import { Token } from './token';\n\nexport class Message {\n  constructor(origin) {\n    this.$$origin = origin;\n    this.$$date = Date.now();\n    this.$$token = new Token();\n    this.$$subject = null;\n    this.$$signatures = [];\n  }\n  subject(subject) { this.$$subject = subject; return this; }\n  sign(signature) { this.$$signatures.push(signature); return this; }\n  token() {return this.$$token;}\n}\n\nMessage.$$name = 'ReGraFX.Message';\n","export function isFunction(value) {\n  return typeof value === 'function' || false;\n}\n\nexport function isPromise(p) {\n  return p && isFunction(p.then);\n}\n\nexport function isMessage(obj) {\n  return (obj && obj.$$name && obj.$$name === 'ReGraFX.Message');\n}\n","import { isPromise } from './tools.js';\n\nexport class Task {\n  constructor(fn = () => null) {\n    this._fn = fn;\n  }\n  execute(input) {\n    try {\n      const res = this._fn(input);\n      return isPromise(res) ? res : Promise.resolve(res);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n  }\n}\n","import { Observable } from './observable.js';\nimport { Observer } from './observer.js';\nimport { Scheduler } from './scheduler.js';\nimport { Message } from './message.js';\nimport { Task } from './task.js';\nexport class Vertex {\n  constructor(task = new Task(), scheduler = new Scheduler(), name = 'Vertex') {\n    this.$$task = task;\n    this.$$scheduler = scheduler;\n    this.$$name = name;\n\n    this.$$thenObservers = new Observable();\n    this.$$catchObservers = new Observable();\n    this.$$finallyObservers = new Observable();\n    this.$$observable = new Observable();\n\n    this.$$observer = new Observer(this.$$next.bind(this), this.$$name);\n  }\n  to(vertex) {\n    this.$$thenObservers.subscribe(vertex.$$observer);\n    return this;\n  }\n  err(vertex) {\n    this.$$catchObservers.subscribe(vertex.$$observer);\n    return this;\n  }\n  final(vertex) {\n    this.$$finallyObservers.subscribe(vertex.$$observer);\n    return this;\n  }\n\n  subscribe(fn) {\n    this.$$observable.subscribe(new Observer(fn));\n  }\n\n  trigger(...input) {\n    const msg = new Message();\n    input.push(msg);\n    this.$$observer.next(...input);\n    return msg;\n  }\n  $$next(...input) {\n    const msg = input[input.length - 1];\n    if (!msg.token().$$cancelled) {\n      this.$$scheduler.schedule()\n        .then(() => {\n          const promise = this.$$task.execute(...input);\n          promise\n            .then(out => {\n              msg.sign(this.$$name);\n              this.$$thenObservers.notify(out, msg);\n            })\n            .catch(err => {\n              msg.sign(this.$$name);\n              this.$$catchObservers.notify(err, msg);\n            })\n            .finally(() => {\n              this.$$finallyObservers.notify(null, msg);\n            });\n          this.$$observable.notify(promise);\n        });\n    }\n  }\n}\n","import { Vertex } from './vertex.js';\nimport { Subscribers } from './subscribers.js';\nimport { Task } from './task.js';\nimport { Scheduler } from './scheduler.js';\n\nexport class Graph {\n  constructor() {\n    this.$$vertices = {};\n  }\n  addVertex(id, task = new Task(), scheduler = new Scheduler()) {\n    if (this.$$vertices[id]) {throw new Error('Duplicated vertex entry');}\n    this.$$vertices[id] = new Vertex(task, scheduler, id);\n    return this.$$vertices[id];\n  }\n  order() { return Object.keys(this.$$vertices).length +  Object.getOwnPropertySymbols(this.$$vertices).length; }\n  vertex(id) { return this.$$vertices[id]; }\n}\n","/* REactive GRAph FluX ReGraFX.js */\n\nimport { Graph } from './graph.js';\nimport { Vertex } from './vertex.js';\nimport { Task } from './task.js';\nimport { Scheduler } from './scheduler.js';\nimport { Message } from './message.js';\nimport { Observable } from './observable.js';\nimport { Observer } from './observer.js';\n\nexport {\n  Graph,\n  Vertex,\n  Task,\n  Scheduler,\n  Message,\n  Observable,\n  Observer\n};\n","/* REactive GRAph FluX ReGraFX.js */\n\nimport * as RGFX from './regrafx';\nexport { RGFX };\n"],"names":["Subscription","obj","id","Symbol","unsubscribe","bind","Subscribers","_subscribers","subscription","ids","length","Object","getOwnPropertySymbols","map","s","Observable","subscribers","$$observers","observer","observers","subscribe","iterable","next","Observer","fn","undefined","name","_fn","_name","Scheduler","delay","pauser","_delay","_pause","_pauser","Promise","resolve","reject","setTimeout","isRunning","x","Token","$$symbol","$$date","Date","now","$$cancelled","Message","origin","$$origin","$$token","$$subject","$$signatures","subject","signature","push","$$name","isFunction","value","isPromise","p","then","Task","input","res","err","Vertex","task","scheduler","$$task","$$scheduler","$$thenObservers","$$catchObservers","$$finallyObservers","$$observable","$$observer","$$next","vertex","msg","token","schedule","promise","execute","out","sign","notify","catch","finally","Graph","$$vertices","Error","keys"],"mappings":"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"}